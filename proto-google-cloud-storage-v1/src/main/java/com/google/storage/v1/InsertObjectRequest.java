/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storage/v1/storage.proto

package com.google.storage.v1;

/**
 *
 *
 * <pre>
 * Message for writing an object.
 * </pre>
 *
 * Protobuf type {@code google.storage.v1.InsertObjectRequest}
 */
public final class InsertObjectRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.storage.v1.InsertObjectRequest)
    InsertObjectRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use InsertObjectRequest.newBuilder() to construct.
  private InsertObjectRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private InsertObjectRequest() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new InsertObjectRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private InsertObjectRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              java.lang.String s = input.readStringRequireUtf8();
              firstMessageCase_ = 1;
              firstMessage_ = s;
              break;
            }
          case 18:
            {
              com.google.storage.v1.InsertObjectSpec.Builder subBuilder = null;
              if (firstMessageCase_ == 2) {
                subBuilder = ((com.google.storage.v1.InsertObjectSpec) firstMessage_).toBuilder();
              }
              firstMessage_ =
                  input.readMessage(
                      com.google.storage.v1.InsertObjectSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.storage.v1.InsertObjectSpec) firstMessage_);
                firstMessage_ = subBuilder.buildPartial();
              }
              firstMessageCase_ = 2;
              break;
            }
          case 24:
            {
              writeOffset_ = input.readInt64();
              break;
            }
          case 34:
            {
              com.google.storage.v1.ChecksummedData.Builder subBuilder = null;
              if (dataCase_ == 4) {
                subBuilder = ((com.google.storage.v1.ChecksummedData) data_).toBuilder();
              }
              data_ =
                  input.readMessage(
                      com.google.storage.v1.ChecksummedData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.storage.v1.ChecksummedData) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 4;
              break;
            }
          case 42:
            {
              com.google.storage.v1.GetObjectMediaRequest.Builder subBuilder = null;
              if (dataCase_ == 5) {
                subBuilder = ((com.google.storage.v1.GetObjectMediaRequest) data_).toBuilder();
              }
              data_ =
                  input.readMessage(
                      com.google.storage.v1.GetObjectMediaRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.storage.v1.GetObjectMediaRequest) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 5;
              break;
            }
          case 50:
            {
              com.google.storage.v1.ObjectChecksums.Builder subBuilder = null;
              if (objectChecksums_ != null) {
                subBuilder = objectChecksums_.toBuilder();
              }
              objectChecksums_ =
                  input.readMessage(
                      com.google.storage.v1.ObjectChecksums.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(objectChecksums_);
                objectChecksums_ = subBuilder.buildPartial();
              }

              break;
            }
          case 56:
            {
              finishWrite_ = input.readBool();
              break;
            }
          case 66:
            {
              com.google.storage.v1.CommonObjectRequestParams.Builder subBuilder = null;
              if (commonObjectRequestParams_ != null) {
                subBuilder = commonObjectRequestParams_.toBuilder();
              }
              commonObjectRequestParams_ =
                  input.readMessage(
                      com.google.storage.v1.CommonObjectRequestParams.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(commonObjectRequestParams_);
                commonObjectRequestParams_ = subBuilder.buildPartial();
              }

              break;
            }
          case 74:
            {
              com.google.storage.v1.CommonRequestParams.Builder subBuilder = null;
              if (commonRequestParams_ != null) {
                subBuilder = commonRequestParams_.toBuilder();
              }
              commonRequestParams_ =
                  input.readMessage(
                      com.google.storage.v1.CommonRequestParams.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(commonRequestParams_);
                commonRequestParams_ = subBuilder.buildPartial();
              }

              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.storage.v1.StorageOuterClass
        .internal_static_google_storage_v1_InsertObjectRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.storage.v1.StorageOuterClass
        .internal_static_google_storage_v1_InsertObjectRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.storage.v1.InsertObjectRequest.class,
            com.google.storage.v1.InsertObjectRequest.Builder.class);
  }

  private int firstMessageCase_ = 0;
  private java.lang.Object firstMessage_;

  public enum FirstMessageCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    UPLOAD_ID(1),
    INSERT_OBJECT_SPEC(2),
    FIRSTMESSAGE_NOT_SET(0);
    private final int value;

    private FirstMessageCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FirstMessageCase valueOf(int value) {
      return forNumber(value);
    }

    public static FirstMessageCase forNumber(int value) {
      switch (value) {
        case 1:
          return UPLOAD_ID;
        case 2:
          return INSERT_OBJECT_SPEC;
        case 0:
          return FIRSTMESSAGE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public FirstMessageCase getFirstMessageCase() {
    return FirstMessageCase.forNumber(firstMessageCase_);
  }

  private int dataCase_ = 0;
  private java.lang.Object data_;

  public enum DataCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    CHECKSUMMED_DATA(4),
    REFERENCE(5),
    DATA_NOT_SET(0);
    private final int value;

    private DataCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataCase valueOf(int value) {
      return forNumber(value);
    }

    public static DataCase forNumber(int value) {
      switch (value) {
        case 4:
          return CHECKSUMMED_DATA;
        case 5:
          return REFERENCE;
        case 0:
          return DATA_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public DataCase getDataCase() {
    return DataCase.forNumber(dataCase_);
  }

  public static final int UPLOAD_ID_FIELD_NUMBER = 1;
  /**
   *
   *
   * <pre>
   * For resumable uploads. This should be the `upload_id` returned from a
   * call to `StartResumableWriteResponse`.
   * </pre>
   *
   * <code>string upload_id = 1;</code>
   *
   * @return Whether the uploadId field is set.
   */
  public boolean hasUploadId() {
    return firstMessageCase_ == 1;
  }
  /**
   *
   *
   * <pre>
   * For resumable uploads. This should be the `upload_id` returned from a
   * call to `StartResumableWriteResponse`.
   * </pre>
   *
   * <code>string upload_id = 1;</code>
   *
   * @return The uploadId.
   */
  public java.lang.String getUploadId() {
    java.lang.Object ref = "";
    if (firstMessageCase_ == 1) {
      ref = firstMessage_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (firstMessageCase_ == 1) {
        firstMessage_ = s;
      }
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * For resumable uploads. This should be the `upload_id` returned from a
   * call to `StartResumableWriteResponse`.
   * </pre>
   *
   * <code>string upload_id = 1;</code>
   *
   * @return The bytes for uploadId.
   */
  public com.google.protobuf.ByteString getUploadIdBytes() {
    java.lang.Object ref = "";
    if (firstMessageCase_ == 1) {
      ref = firstMessage_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (firstMessageCase_ == 1) {
        firstMessage_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INSERT_OBJECT_SPEC_FIELD_NUMBER = 2;
  /**
   *
   *
   * <pre>
   * For non-resumable uploads. Describes the overall upload, including the
   * destination bucket and object name, preconditions, etc.
   * </pre>
   *
   * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
   *
   * @return Whether the insertObjectSpec field is set.
   */
  @java.lang.Override
  public boolean hasInsertObjectSpec() {
    return firstMessageCase_ == 2;
  }
  /**
   *
   *
   * <pre>
   * For non-resumable uploads. Describes the overall upload, including the
   * destination bucket and object name, preconditions, etc.
   * </pre>
   *
   * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
   *
   * @return The insertObjectSpec.
   */
  @java.lang.Override
  public com.google.storage.v1.InsertObjectSpec getInsertObjectSpec() {
    if (firstMessageCase_ == 2) {
      return (com.google.storage.v1.InsertObjectSpec) firstMessage_;
    }
    return com.google.storage.v1.InsertObjectSpec.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * For non-resumable uploads. Describes the overall upload, including the
   * destination bucket and object name, preconditions, etc.
   * </pre>
   *
   * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
   */
  @java.lang.Override
  public com.google.storage.v1.InsertObjectSpecOrBuilder getInsertObjectSpecOrBuilder() {
    if (firstMessageCase_ == 2) {
      return (com.google.storage.v1.InsertObjectSpec) firstMessage_;
    }
    return com.google.storage.v1.InsertObjectSpec.getDefaultInstance();
  }

  public static final int WRITE_OFFSET_FIELD_NUMBER = 3;
  private long writeOffset_;
  /**
   *
   *
   * <pre>
   * Required. The offset from the beginning of the object at which the data should be
   * written.
   * In the first `InsertObjectRequest` of a `InsertObject()` action, it
   * indicates the initial offset for the `Insert()` call. The value **must** be
   * equal to the `committed_size` that a call to `QueryWriteStatus()` would
   * return (0 if this is the first write to the object).
   * On subsequent calls, this value **must** be no larger than the sum of the
   * first `write_offset` and the sizes of all `data` chunks sent previously on
   * this stream.
   * An incorrect value will cause an error.
   * </pre>
   *
   * <code>int64 write_offset = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The writeOffset.
   */
  @java.lang.Override
  public long getWriteOffset() {
    return writeOffset_;
  }

  public static final int CHECKSUMMED_DATA_FIELD_NUMBER = 4;
  /**
   *
   *
   * <pre>
   * The data to insert. If a crc32c checksum is provided that doesn't match
   * the checksum computed by the service, the request will fail.
   * </pre>
   *
   * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
   *
   * @return Whether the checksummedData field is set.
   */
  @java.lang.Override
  public boolean hasChecksummedData() {
    return dataCase_ == 4;
  }
  /**
   *
   *
   * <pre>
   * The data to insert. If a crc32c checksum is provided that doesn't match
   * the checksum computed by the service, the request will fail.
   * </pre>
   *
   * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
   *
   * @return The checksummedData.
   */
  @java.lang.Override
  public com.google.storage.v1.ChecksummedData getChecksummedData() {
    if (dataCase_ == 4) {
      return (com.google.storage.v1.ChecksummedData) data_;
    }
    return com.google.storage.v1.ChecksummedData.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * The data to insert. If a crc32c checksum is provided that doesn't match
   * the checksum computed by the service, the request will fail.
   * </pre>
   *
   * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
   */
  @java.lang.Override
  public com.google.storage.v1.ChecksummedDataOrBuilder getChecksummedDataOrBuilder() {
    if (dataCase_ == 4) {
      return (com.google.storage.v1.ChecksummedData) data_;
    }
    return com.google.storage.v1.ChecksummedData.getDefaultInstance();
  }

  public static final int REFERENCE_FIELD_NUMBER = 5;
  /**
   *
   *
   * <pre>
   * A reference to an existing object. This can be used to support
   * several use cases:
   *   - Writing a sequence of data buffers supports the basic use case of
   *     uploading a complete object, chunk by chunk.
   *   - Writing a sequence of references to existing objects allows an
   *     object to be composed from a collection of objects, which can be
   *     used to support parallel object writes.
   *   - Writing a single reference with a given offset and size can be used
   *     to create an object from a slice of an existing object.
   *   - Writing an object referencing a object slice (created as noted
   *     above) followed by a data buffer followed by another object
   *     slice can be used to support delta upload functionality.
   * </pre>
   *
   * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
   *
   * @return Whether the reference field is set.
   */
  @java.lang.Override
  public boolean hasReference() {
    return dataCase_ == 5;
  }
  /**
   *
   *
   * <pre>
   * A reference to an existing object. This can be used to support
   * several use cases:
   *   - Writing a sequence of data buffers supports the basic use case of
   *     uploading a complete object, chunk by chunk.
   *   - Writing a sequence of references to existing objects allows an
   *     object to be composed from a collection of objects, which can be
   *     used to support parallel object writes.
   *   - Writing a single reference with a given offset and size can be used
   *     to create an object from a slice of an existing object.
   *   - Writing an object referencing a object slice (created as noted
   *     above) followed by a data buffer followed by another object
   *     slice can be used to support delta upload functionality.
   * </pre>
   *
   * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
   *
   * @return The reference.
   */
  @java.lang.Override
  public com.google.storage.v1.GetObjectMediaRequest getReference() {
    if (dataCase_ == 5) {
      return (com.google.storage.v1.GetObjectMediaRequest) data_;
    }
    return com.google.storage.v1.GetObjectMediaRequest.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * A reference to an existing object. This can be used to support
   * several use cases:
   *   - Writing a sequence of data buffers supports the basic use case of
   *     uploading a complete object, chunk by chunk.
   *   - Writing a sequence of references to existing objects allows an
   *     object to be composed from a collection of objects, which can be
   *     used to support parallel object writes.
   *   - Writing a single reference with a given offset and size can be used
   *     to create an object from a slice of an existing object.
   *   - Writing an object referencing a object slice (created as noted
   *     above) followed by a data buffer followed by another object
   *     slice can be used to support delta upload functionality.
   * </pre>
   *
   * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
   */
  @java.lang.Override
  public com.google.storage.v1.GetObjectMediaRequestOrBuilder getReferenceOrBuilder() {
    if (dataCase_ == 5) {
      return (com.google.storage.v1.GetObjectMediaRequest) data_;
    }
    return com.google.storage.v1.GetObjectMediaRequest.getDefaultInstance();
  }

  public static final int OBJECT_CHECKSUMS_FIELD_NUMBER = 6;
  private com.google.storage.v1.ObjectChecksums objectChecksums_;
  /**
   *
   *
   * <pre>
   * Checksums for the complete object. If the checksums computed by the service
   * don't match the specifified checksums the call will fail. May only be
   * provided in the first or last request (either with first_message, or
   * finish_write set).
   * </pre>
   *
   * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
   *
   * @return Whether the objectChecksums field is set.
   */
  @java.lang.Override
  public boolean hasObjectChecksums() {
    return objectChecksums_ != null;
  }
  /**
   *
   *
   * <pre>
   * Checksums for the complete object. If the checksums computed by the service
   * don't match the specifified checksums the call will fail. May only be
   * provided in the first or last request (either with first_message, or
   * finish_write set).
   * </pre>
   *
   * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
   *
   * @return The objectChecksums.
   */
  @java.lang.Override
  public com.google.storage.v1.ObjectChecksums getObjectChecksums() {
    return objectChecksums_ == null
        ? com.google.storage.v1.ObjectChecksums.getDefaultInstance()
        : objectChecksums_;
  }
  /**
   *
   *
   * <pre>
   * Checksums for the complete object. If the checksums computed by the service
   * don't match the specifified checksums the call will fail. May only be
   * provided in the first or last request (either with first_message, or
   * finish_write set).
   * </pre>
   *
   * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
   */
  @java.lang.Override
  public com.google.storage.v1.ObjectChecksumsOrBuilder getObjectChecksumsOrBuilder() {
    return getObjectChecksums();
  }

  public static final int FINISH_WRITE_FIELD_NUMBER = 7;
  private boolean finishWrite_;
  /**
   *
   *
   * <pre>
   * If `true`, this indicates that the write is complete. Sending any
   * `InsertObjectRequest`s subsequent to one in which `finish_write` is `true`
   * will cause an error.
   * For a non-resumable write (where the upload_id was not set in the first
   * message), it is an error not to set this field in the final message of the
   * stream.
   * </pre>
   *
   * <code>bool finish_write = 7;</code>
   *
   * @return The finishWrite.
   */
  @java.lang.Override
  public boolean getFinishWrite() {
    return finishWrite_;
  }

  public static final int COMMON_OBJECT_REQUEST_PARAMS_FIELD_NUMBER = 8;
  private com.google.storage.v1.CommonObjectRequestParams commonObjectRequestParams_;
  /**
   *
   *
   * <pre>
   * A set of parameters common to Storage API requests concerning an object.
   * </pre>
   *
   * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
   *
   * @return Whether the commonObjectRequestParams field is set.
   */
  @java.lang.Override
  public boolean hasCommonObjectRequestParams() {
    return commonObjectRequestParams_ != null;
  }
  /**
   *
   *
   * <pre>
   * A set of parameters common to Storage API requests concerning an object.
   * </pre>
   *
   * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
   *
   * @return The commonObjectRequestParams.
   */
  @java.lang.Override
  public com.google.storage.v1.CommonObjectRequestParams getCommonObjectRequestParams() {
    return commonObjectRequestParams_ == null
        ? com.google.storage.v1.CommonObjectRequestParams.getDefaultInstance()
        : commonObjectRequestParams_;
  }
  /**
   *
   *
   * <pre>
   * A set of parameters common to Storage API requests concerning an object.
   * </pre>
   *
   * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
   */
  @java.lang.Override
  public com.google.storage.v1.CommonObjectRequestParamsOrBuilder
      getCommonObjectRequestParamsOrBuilder() {
    return getCommonObjectRequestParams();
  }

  public static final int COMMON_REQUEST_PARAMS_FIELD_NUMBER = 9;
  private com.google.storage.v1.CommonRequestParams commonRequestParams_;
  /**
   *
   *
   * <pre>
   * A set of parameters common to all Storage API requests.
   * </pre>
   *
   * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
   *
   * @return Whether the commonRequestParams field is set.
   */
  @java.lang.Override
  public boolean hasCommonRequestParams() {
    return commonRequestParams_ != null;
  }
  /**
   *
   *
   * <pre>
   * A set of parameters common to all Storage API requests.
   * </pre>
   *
   * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
   *
   * @return The commonRequestParams.
   */
  @java.lang.Override
  public com.google.storage.v1.CommonRequestParams getCommonRequestParams() {
    return commonRequestParams_ == null
        ? com.google.storage.v1.CommonRequestParams.getDefaultInstance()
        : commonRequestParams_;
  }
  /**
   *
   *
   * <pre>
   * A set of parameters common to all Storage API requests.
   * </pre>
   *
   * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
   */
  @java.lang.Override
  public com.google.storage.v1.CommonRequestParamsOrBuilder getCommonRequestParamsOrBuilder() {
    return getCommonRequestParams();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (firstMessageCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, firstMessage_);
    }
    if (firstMessageCase_ == 2) {
      output.writeMessage(2, (com.google.storage.v1.InsertObjectSpec) firstMessage_);
    }
    if (writeOffset_ != 0L) {
      output.writeInt64(3, writeOffset_);
    }
    if (dataCase_ == 4) {
      output.writeMessage(4, (com.google.storage.v1.ChecksummedData) data_);
    }
    if (dataCase_ == 5) {
      output.writeMessage(5, (com.google.storage.v1.GetObjectMediaRequest) data_);
    }
    if (objectChecksums_ != null) {
      output.writeMessage(6, getObjectChecksums());
    }
    if (finishWrite_ != false) {
      output.writeBool(7, finishWrite_);
    }
    if (commonObjectRequestParams_ != null) {
      output.writeMessage(8, getCommonObjectRequestParams());
    }
    if (commonRequestParams_ != null) {
      output.writeMessage(9, getCommonRequestParams());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (firstMessageCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, firstMessage_);
    }
    if (firstMessageCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              2, (com.google.storage.v1.InsertObjectSpec) firstMessage_);
    }
    if (writeOffset_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, writeOffset_);
    }
    if (dataCase_ == 4) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              4, (com.google.storage.v1.ChecksummedData) data_);
    }
    if (dataCase_ == 5) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              5, (com.google.storage.v1.GetObjectMediaRequest) data_);
    }
    if (objectChecksums_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getObjectChecksums());
    }
    if (finishWrite_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(7, finishWrite_);
    }
    if (commonObjectRequestParams_ != null) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              8, getCommonObjectRequestParams());
    }
    if (commonRequestParams_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, getCommonRequestParams());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.storage.v1.InsertObjectRequest)) {
      return super.equals(obj);
    }
    com.google.storage.v1.InsertObjectRequest other =
        (com.google.storage.v1.InsertObjectRequest) obj;

    if (getWriteOffset() != other.getWriteOffset()) return false;
    if (hasObjectChecksums() != other.hasObjectChecksums()) return false;
    if (hasObjectChecksums()) {
      if (!getObjectChecksums().equals(other.getObjectChecksums())) return false;
    }
    if (getFinishWrite() != other.getFinishWrite()) return false;
    if (hasCommonObjectRequestParams() != other.hasCommonObjectRequestParams()) return false;
    if (hasCommonObjectRequestParams()) {
      if (!getCommonObjectRequestParams().equals(other.getCommonObjectRequestParams()))
        return false;
    }
    if (hasCommonRequestParams() != other.hasCommonRequestParams()) return false;
    if (hasCommonRequestParams()) {
      if (!getCommonRequestParams().equals(other.getCommonRequestParams())) return false;
    }
    if (!getFirstMessageCase().equals(other.getFirstMessageCase())) return false;
    switch (firstMessageCase_) {
      case 1:
        if (!getUploadId().equals(other.getUploadId())) return false;
        break;
      case 2:
        if (!getInsertObjectSpec().equals(other.getInsertObjectSpec())) return false;
        break;
      case 0:
      default:
    }
    if (!getDataCase().equals(other.getDataCase())) return false;
    switch (dataCase_) {
      case 4:
        if (!getChecksummedData().equals(other.getChecksummedData())) return false;
        break;
      case 5:
        if (!getReference().equals(other.getReference())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + WRITE_OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getWriteOffset());
    if (hasObjectChecksums()) {
      hash = (37 * hash) + OBJECT_CHECKSUMS_FIELD_NUMBER;
      hash = (53 * hash) + getObjectChecksums().hashCode();
    }
    hash = (37 * hash) + FINISH_WRITE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getFinishWrite());
    if (hasCommonObjectRequestParams()) {
      hash = (37 * hash) + COMMON_OBJECT_REQUEST_PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getCommonObjectRequestParams().hashCode();
    }
    if (hasCommonRequestParams()) {
      hash = (37 * hash) + COMMON_REQUEST_PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getCommonRequestParams().hashCode();
    }
    switch (firstMessageCase_) {
      case 1:
        hash = (37 * hash) + UPLOAD_ID_FIELD_NUMBER;
        hash = (53 * hash) + getUploadId().hashCode();
        break;
      case 2:
        hash = (37 * hash) + INSERT_OBJECT_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getInsertObjectSpec().hashCode();
        break;
      case 0:
      default:
    }
    switch (dataCase_) {
      case 4:
        hash = (37 * hash) + CHECKSUMMED_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getChecksummedData().hashCode();
        break;
      case 5:
        hash = (37 * hash) + REFERENCE_FIELD_NUMBER;
        hash = (53 * hash) + getReference().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.storage.v1.InsertObjectRequest parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.storage.v1.InsertObjectRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.storage.v1.InsertObjectRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.storage.v1.InsertObjectRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Message for writing an object.
   * </pre>
   *
   * Protobuf type {@code google.storage.v1.InsertObjectRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.storage.v1.InsertObjectRequest)
      com.google.storage.v1.InsertObjectRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.storage.v1.StorageOuterClass
          .internal_static_google_storage_v1_InsertObjectRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.storage.v1.StorageOuterClass
          .internal_static_google_storage_v1_InsertObjectRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.storage.v1.InsertObjectRequest.class,
              com.google.storage.v1.InsertObjectRequest.Builder.class);
    }

    // Construct using com.google.storage.v1.InsertObjectRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      writeOffset_ = 0L;

      if (objectChecksumsBuilder_ == null) {
        objectChecksums_ = null;
      } else {
        objectChecksums_ = null;
        objectChecksumsBuilder_ = null;
      }
      finishWrite_ = false;

      if (commonObjectRequestParamsBuilder_ == null) {
        commonObjectRequestParams_ = null;
      } else {
        commonObjectRequestParams_ = null;
        commonObjectRequestParamsBuilder_ = null;
      }
      if (commonRequestParamsBuilder_ == null) {
        commonRequestParams_ = null;
      } else {
        commonRequestParams_ = null;
        commonRequestParamsBuilder_ = null;
      }
      firstMessageCase_ = 0;
      firstMessage_ = null;
      dataCase_ = 0;
      data_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.storage.v1.StorageOuterClass
          .internal_static_google_storage_v1_InsertObjectRequest_descriptor;
    }

    @java.lang.Override
    public com.google.storage.v1.InsertObjectRequest getDefaultInstanceForType() {
      return com.google.storage.v1.InsertObjectRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.storage.v1.InsertObjectRequest build() {
      com.google.storage.v1.InsertObjectRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.storage.v1.InsertObjectRequest buildPartial() {
      com.google.storage.v1.InsertObjectRequest result =
          new com.google.storage.v1.InsertObjectRequest(this);
      if (firstMessageCase_ == 1) {
        result.firstMessage_ = firstMessage_;
      }
      if (firstMessageCase_ == 2) {
        if (insertObjectSpecBuilder_ == null) {
          result.firstMessage_ = firstMessage_;
        } else {
          result.firstMessage_ = insertObjectSpecBuilder_.build();
        }
      }
      result.writeOffset_ = writeOffset_;
      if (dataCase_ == 4) {
        if (checksummedDataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = checksummedDataBuilder_.build();
        }
      }
      if (dataCase_ == 5) {
        if (referenceBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = referenceBuilder_.build();
        }
      }
      if (objectChecksumsBuilder_ == null) {
        result.objectChecksums_ = objectChecksums_;
      } else {
        result.objectChecksums_ = objectChecksumsBuilder_.build();
      }
      result.finishWrite_ = finishWrite_;
      if (commonObjectRequestParamsBuilder_ == null) {
        result.commonObjectRequestParams_ = commonObjectRequestParams_;
      } else {
        result.commonObjectRequestParams_ = commonObjectRequestParamsBuilder_.build();
      }
      if (commonRequestParamsBuilder_ == null) {
        result.commonRequestParams_ = commonRequestParams_;
      } else {
        result.commonRequestParams_ = commonRequestParamsBuilder_.build();
      }
      result.firstMessageCase_ = firstMessageCase_;
      result.dataCase_ = dataCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.storage.v1.InsertObjectRequest) {
        return mergeFrom((com.google.storage.v1.InsertObjectRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.storage.v1.InsertObjectRequest other) {
      if (other == com.google.storage.v1.InsertObjectRequest.getDefaultInstance()) return this;
      if (other.getWriteOffset() != 0L) {
        setWriteOffset(other.getWriteOffset());
      }
      if (other.hasObjectChecksums()) {
        mergeObjectChecksums(other.getObjectChecksums());
      }
      if (other.getFinishWrite() != false) {
        setFinishWrite(other.getFinishWrite());
      }
      if (other.hasCommonObjectRequestParams()) {
        mergeCommonObjectRequestParams(other.getCommonObjectRequestParams());
      }
      if (other.hasCommonRequestParams()) {
        mergeCommonRequestParams(other.getCommonRequestParams());
      }
      switch (other.getFirstMessageCase()) {
        case UPLOAD_ID:
          {
            firstMessageCase_ = 1;
            firstMessage_ = other.firstMessage_;
            onChanged();
            break;
          }
        case INSERT_OBJECT_SPEC:
          {
            mergeInsertObjectSpec(other.getInsertObjectSpec());
            break;
          }
        case FIRSTMESSAGE_NOT_SET:
          {
            break;
          }
      }
      switch (other.getDataCase()) {
        case CHECKSUMMED_DATA:
          {
            mergeChecksummedData(other.getChecksummedData());
            break;
          }
        case REFERENCE:
          {
            mergeReference(other.getReference());
            break;
          }
        case DATA_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.storage.v1.InsertObjectRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.storage.v1.InsertObjectRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int firstMessageCase_ = 0;
    private java.lang.Object firstMessage_;

    public FirstMessageCase getFirstMessageCase() {
      return FirstMessageCase.forNumber(firstMessageCase_);
    }

    public Builder clearFirstMessage() {
      firstMessageCase_ = 0;
      firstMessage_ = null;
      onChanged();
      return this;
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;

    public DataCase getDataCase() {
      return DataCase.forNumber(dataCase_);
    }

    public Builder clearData() {
      dataCase_ = 0;
      data_ = null;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * For resumable uploads. This should be the `upload_id` returned from a
     * call to `StartResumableWriteResponse`.
     * </pre>
     *
     * <code>string upload_id = 1;</code>
     *
     * @return Whether the uploadId field is set.
     */
    @java.lang.Override
    public boolean hasUploadId() {
      return firstMessageCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * For resumable uploads. This should be the `upload_id` returned from a
     * call to `StartResumableWriteResponse`.
     * </pre>
     *
     * <code>string upload_id = 1;</code>
     *
     * @return The uploadId.
     */
    @java.lang.Override
    public java.lang.String getUploadId() {
      java.lang.Object ref = "";
      if (firstMessageCase_ == 1) {
        ref = firstMessage_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (firstMessageCase_ == 1) {
          firstMessage_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * For resumable uploads. This should be the `upload_id` returned from a
     * call to `StartResumableWriteResponse`.
     * </pre>
     *
     * <code>string upload_id = 1;</code>
     *
     * @return The bytes for uploadId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getUploadIdBytes() {
      java.lang.Object ref = "";
      if (firstMessageCase_ == 1) {
        ref = firstMessage_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (firstMessageCase_ == 1) {
          firstMessage_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * For resumable uploads. This should be the `upload_id` returned from a
     * call to `StartResumableWriteResponse`.
     * </pre>
     *
     * <code>string upload_id = 1;</code>
     *
     * @param value The uploadId to set.
     * @return This builder for chaining.
     */
    public Builder setUploadId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      firstMessageCase_ = 1;
      firstMessage_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * For resumable uploads. This should be the `upload_id` returned from a
     * call to `StartResumableWriteResponse`.
     * </pre>
     *
     * <code>string upload_id = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearUploadId() {
      if (firstMessageCase_ == 1) {
        firstMessageCase_ = 0;
        firstMessage_ = null;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * For resumable uploads. This should be the `upload_id` returned from a
     * call to `StartResumableWriteResponse`.
     * </pre>
     *
     * <code>string upload_id = 1;</code>
     *
     * @param value The bytes for uploadId to set.
     * @return This builder for chaining.
     */
    public Builder setUploadIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      firstMessageCase_ = 1;
      firstMessage_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.InsertObjectSpec,
            com.google.storage.v1.InsertObjectSpec.Builder,
            com.google.storage.v1.InsertObjectSpecOrBuilder>
        insertObjectSpecBuilder_;
    /**
     *
     *
     * <pre>
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     * </pre>
     *
     * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
     *
     * @return Whether the insertObjectSpec field is set.
     */
    @java.lang.Override
    public boolean hasInsertObjectSpec() {
      return firstMessageCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     * </pre>
     *
     * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
     *
     * @return The insertObjectSpec.
     */
    @java.lang.Override
    public com.google.storage.v1.InsertObjectSpec getInsertObjectSpec() {
      if (insertObjectSpecBuilder_ == null) {
        if (firstMessageCase_ == 2) {
          return (com.google.storage.v1.InsertObjectSpec) firstMessage_;
        }
        return com.google.storage.v1.InsertObjectSpec.getDefaultInstance();
      } else {
        if (firstMessageCase_ == 2) {
          return insertObjectSpecBuilder_.getMessage();
        }
        return com.google.storage.v1.InsertObjectSpec.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     * </pre>
     *
     * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
     */
    public Builder setInsertObjectSpec(com.google.storage.v1.InsertObjectSpec value) {
      if (insertObjectSpecBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        firstMessage_ = value;
        onChanged();
      } else {
        insertObjectSpecBuilder_.setMessage(value);
      }
      firstMessageCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     * </pre>
     *
     * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
     */
    public Builder setInsertObjectSpec(
        com.google.storage.v1.InsertObjectSpec.Builder builderForValue) {
      if (insertObjectSpecBuilder_ == null) {
        firstMessage_ = builderForValue.build();
        onChanged();
      } else {
        insertObjectSpecBuilder_.setMessage(builderForValue.build());
      }
      firstMessageCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     * </pre>
     *
     * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
     */
    public Builder mergeInsertObjectSpec(com.google.storage.v1.InsertObjectSpec value) {
      if (insertObjectSpecBuilder_ == null) {
        if (firstMessageCase_ == 2
            && firstMessage_ != com.google.storage.v1.InsertObjectSpec.getDefaultInstance()) {
          firstMessage_ =
              com.google.storage.v1.InsertObjectSpec.newBuilder(
                      (com.google.storage.v1.InsertObjectSpec) firstMessage_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          firstMessage_ = value;
        }
        onChanged();
      } else {
        if (firstMessageCase_ == 2) {
          insertObjectSpecBuilder_.mergeFrom(value);
        }
        insertObjectSpecBuilder_.setMessage(value);
      }
      firstMessageCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     * </pre>
     *
     * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
     */
    public Builder clearInsertObjectSpec() {
      if (insertObjectSpecBuilder_ == null) {
        if (firstMessageCase_ == 2) {
          firstMessageCase_ = 0;
          firstMessage_ = null;
          onChanged();
        }
      } else {
        if (firstMessageCase_ == 2) {
          firstMessageCase_ = 0;
          firstMessage_ = null;
        }
        insertObjectSpecBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     * </pre>
     *
     * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
     */
    public com.google.storage.v1.InsertObjectSpec.Builder getInsertObjectSpecBuilder() {
      return getInsertObjectSpecFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     * </pre>
     *
     * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
     */
    @java.lang.Override
    public com.google.storage.v1.InsertObjectSpecOrBuilder getInsertObjectSpecOrBuilder() {
      if ((firstMessageCase_ == 2) && (insertObjectSpecBuilder_ != null)) {
        return insertObjectSpecBuilder_.getMessageOrBuilder();
      } else {
        if (firstMessageCase_ == 2) {
          return (com.google.storage.v1.InsertObjectSpec) firstMessage_;
        }
        return com.google.storage.v1.InsertObjectSpec.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     * </pre>
     *
     * <code>.google.storage.v1.InsertObjectSpec insert_object_spec = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.InsertObjectSpec,
            com.google.storage.v1.InsertObjectSpec.Builder,
            com.google.storage.v1.InsertObjectSpecOrBuilder>
        getInsertObjectSpecFieldBuilder() {
      if (insertObjectSpecBuilder_ == null) {
        if (!(firstMessageCase_ == 2)) {
          firstMessage_ = com.google.storage.v1.InsertObjectSpec.getDefaultInstance();
        }
        insertObjectSpecBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.storage.v1.InsertObjectSpec,
                com.google.storage.v1.InsertObjectSpec.Builder,
                com.google.storage.v1.InsertObjectSpecOrBuilder>(
                (com.google.storage.v1.InsertObjectSpec) firstMessage_,
                getParentForChildren(),
                isClean());
        firstMessage_ = null;
      }
      firstMessageCase_ = 2;
      onChanged();
      ;
      return insertObjectSpecBuilder_;
    }

    private long writeOffset_;
    /**
     *
     *
     * <pre>
     * Required. The offset from the beginning of the object at which the data should be
     * written.
     * In the first `InsertObjectRequest` of a `InsertObject()` action, it
     * indicates the initial offset for the `Insert()` call. The value **must** be
     * equal to the `committed_size` that a call to `QueryWriteStatus()` would
     * return (0 if this is the first write to the object).
     * On subsequent calls, this value **must** be no larger than the sum of the
     * first `write_offset` and the sizes of all `data` chunks sent previously on
     * this stream.
     * An incorrect value will cause an error.
     * </pre>
     *
     * <code>int64 write_offset = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The writeOffset.
     */
    @java.lang.Override
    public long getWriteOffset() {
      return writeOffset_;
    }
    /**
     *
     *
     * <pre>
     * Required. The offset from the beginning of the object at which the data should be
     * written.
     * In the first `InsertObjectRequest` of a `InsertObject()` action, it
     * indicates the initial offset for the `Insert()` call. The value **must** be
     * equal to the `committed_size` that a call to `QueryWriteStatus()` would
     * return (0 if this is the first write to the object).
     * On subsequent calls, this value **must** be no larger than the sum of the
     * first `write_offset` and the sizes of all `data` chunks sent previously on
     * this stream.
     * An incorrect value will cause an error.
     * </pre>
     *
     * <code>int64 write_offset = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The writeOffset to set.
     * @return This builder for chaining.
     */
    public Builder setWriteOffset(long value) {

      writeOffset_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The offset from the beginning of the object at which the data should be
     * written.
     * In the first `InsertObjectRequest` of a `InsertObject()` action, it
     * indicates the initial offset for the `Insert()` call. The value **must** be
     * equal to the `committed_size` that a call to `QueryWriteStatus()` would
     * return (0 if this is the first write to the object).
     * On subsequent calls, this value **must** be no larger than the sum of the
     * first `write_offset` and the sizes of all `data` chunks sent previously on
     * this stream.
     * An incorrect value will cause an error.
     * </pre>
     *
     * <code>int64 write_offset = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearWriteOffset() {

      writeOffset_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.ChecksummedData,
            com.google.storage.v1.ChecksummedData.Builder,
            com.google.storage.v1.ChecksummedDataOrBuilder>
        checksummedDataBuilder_;
    /**
     *
     *
     * <pre>
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     * </pre>
     *
     * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
     *
     * @return Whether the checksummedData field is set.
     */
    @java.lang.Override
    public boolean hasChecksummedData() {
      return dataCase_ == 4;
    }
    /**
     *
     *
     * <pre>
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     * </pre>
     *
     * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
     *
     * @return The checksummedData.
     */
    @java.lang.Override
    public com.google.storage.v1.ChecksummedData getChecksummedData() {
      if (checksummedDataBuilder_ == null) {
        if (dataCase_ == 4) {
          return (com.google.storage.v1.ChecksummedData) data_;
        }
        return com.google.storage.v1.ChecksummedData.getDefaultInstance();
      } else {
        if (dataCase_ == 4) {
          return checksummedDataBuilder_.getMessage();
        }
        return com.google.storage.v1.ChecksummedData.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     * </pre>
     *
     * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
     */
    public Builder setChecksummedData(com.google.storage.v1.ChecksummedData value) {
      if (checksummedDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        checksummedDataBuilder_.setMessage(value);
      }
      dataCase_ = 4;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     * </pre>
     *
     * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
     */
    public Builder setChecksummedData(
        com.google.storage.v1.ChecksummedData.Builder builderForValue) {
      if (checksummedDataBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        checksummedDataBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 4;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     * </pre>
     *
     * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
     */
    public Builder mergeChecksummedData(com.google.storage.v1.ChecksummedData value) {
      if (checksummedDataBuilder_ == null) {
        if (dataCase_ == 4 && data_ != com.google.storage.v1.ChecksummedData.getDefaultInstance()) {
          data_ =
              com.google.storage.v1.ChecksummedData.newBuilder(
                      (com.google.storage.v1.ChecksummedData) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 4) {
          checksummedDataBuilder_.mergeFrom(value);
        }
        checksummedDataBuilder_.setMessage(value);
      }
      dataCase_ = 4;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     * </pre>
     *
     * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
     */
    public Builder clearChecksummedData() {
      if (checksummedDataBuilder_ == null) {
        if (dataCase_ == 4) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 4) {
          dataCase_ = 0;
          data_ = null;
        }
        checksummedDataBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     * </pre>
     *
     * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
     */
    public com.google.storage.v1.ChecksummedData.Builder getChecksummedDataBuilder() {
      return getChecksummedDataFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     * </pre>
     *
     * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
     */
    @java.lang.Override
    public com.google.storage.v1.ChecksummedDataOrBuilder getChecksummedDataOrBuilder() {
      if ((dataCase_ == 4) && (checksummedDataBuilder_ != null)) {
        return checksummedDataBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 4) {
          return (com.google.storage.v1.ChecksummedData) data_;
        }
        return com.google.storage.v1.ChecksummedData.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     * </pre>
     *
     * <code>.google.storage.v1.ChecksummedData checksummed_data = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.ChecksummedData,
            com.google.storage.v1.ChecksummedData.Builder,
            com.google.storage.v1.ChecksummedDataOrBuilder>
        getChecksummedDataFieldBuilder() {
      if (checksummedDataBuilder_ == null) {
        if (!(dataCase_ == 4)) {
          data_ = com.google.storage.v1.ChecksummedData.getDefaultInstance();
        }
        checksummedDataBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.storage.v1.ChecksummedData,
                com.google.storage.v1.ChecksummedData.Builder,
                com.google.storage.v1.ChecksummedDataOrBuilder>(
                (com.google.storage.v1.ChecksummedData) data_, getParentForChildren(), isClean());
        data_ = null;
      }
      dataCase_ = 4;
      onChanged();
      ;
      return checksummedDataBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.GetObjectMediaRequest,
            com.google.storage.v1.GetObjectMediaRequest.Builder,
            com.google.storage.v1.GetObjectMediaRequestOrBuilder>
        referenceBuilder_;
    /**
     *
     *
     * <pre>
     * A reference to an existing object. This can be used to support
     * several use cases:
     *   - Writing a sequence of data buffers supports the basic use case of
     *     uploading a complete object, chunk by chunk.
     *   - Writing a sequence of references to existing objects allows an
     *     object to be composed from a collection of objects, which can be
     *     used to support parallel object writes.
     *   - Writing a single reference with a given offset and size can be used
     *     to create an object from a slice of an existing object.
     *   - Writing an object referencing a object slice (created as noted
     *     above) followed by a data buffer followed by another object
     *     slice can be used to support delta upload functionality.
     * </pre>
     *
     * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
     *
     * @return Whether the reference field is set.
     */
    @java.lang.Override
    public boolean hasReference() {
      return dataCase_ == 5;
    }
    /**
     *
     *
     * <pre>
     * A reference to an existing object. This can be used to support
     * several use cases:
     *   - Writing a sequence of data buffers supports the basic use case of
     *     uploading a complete object, chunk by chunk.
     *   - Writing a sequence of references to existing objects allows an
     *     object to be composed from a collection of objects, which can be
     *     used to support parallel object writes.
     *   - Writing a single reference with a given offset and size can be used
     *     to create an object from a slice of an existing object.
     *   - Writing an object referencing a object slice (created as noted
     *     above) followed by a data buffer followed by another object
     *     slice can be used to support delta upload functionality.
     * </pre>
     *
     * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
     *
     * @return The reference.
     */
    @java.lang.Override
    public com.google.storage.v1.GetObjectMediaRequest getReference() {
      if (referenceBuilder_ == null) {
        if (dataCase_ == 5) {
          return (com.google.storage.v1.GetObjectMediaRequest) data_;
        }
        return com.google.storage.v1.GetObjectMediaRequest.getDefaultInstance();
      } else {
        if (dataCase_ == 5) {
          return referenceBuilder_.getMessage();
        }
        return com.google.storage.v1.GetObjectMediaRequest.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * A reference to an existing object. This can be used to support
     * several use cases:
     *   - Writing a sequence of data buffers supports the basic use case of
     *     uploading a complete object, chunk by chunk.
     *   - Writing a sequence of references to existing objects allows an
     *     object to be composed from a collection of objects, which can be
     *     used to support parallel object writes.
     *   - Writing a single reference with a given offset and size can be used
     *     to create an object from a slice of an existing object.
     *   - Writing an object referencing a object slice (created as noted
     *     above) followed by a data buffer followed by another object
     *     slice can be used to support delta upload functionality.
     * </pre>
     *
     * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
     */
    public Builder setReference(com.google.storage.v1.GetObjectMediaRequest value) {
      if (referenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        referenceBuilder_.setMessage(value);
      }
      dataCase_ = 5;
      return this;
    }
    /**
     *
     *
     * <pre>
     * A reference to an existing object. This can be used to support
     * several use cases:
     *   - Writing a sequence of data buffers supports the basic use case of
     *     uploading a complete object, chunk by chunk.
     *   - Writing a sequence of references to existing objects allows an
     *     object to be composed from a collection of objects, which can be
     *     used to support parallel object writes.
     *   - Writing a single reference with a given offset and size can be used
     *     to create an object from a slice of an existing object.
     *   - Writing an object referencing a object slice (created as noted
     *     above) followed by a data buffer followed by another object
     *     slice can be used to support delta upload functionality.
     * </pre>
     *
     * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
     */
    public Builder setReference(
        com.google.storage.v1.GetObjectMediaRequest.Builder builderForValue) {
      if (referenceBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        referenceBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 5;
      return this;
    }
    /**
     *
     *
     * <pre>
     * A reference to an existing object. This can be used to support
     * several use cases:
     *   - Writing a sequence of data buffers supports the basic use case of
     *     uploading a complete object, chunk by chunk.
     *   - Writing a sequence of references to existing objects allows an
     *     object to be composed from a collection of objects, which can be
     *     used to support parallel object writes.
     *   - Writing a single reference with a given offset and size can be used
     *     to create an object from a slice of an existing object.
     *   - Writing an object referencing a object slice (created as noted
     *     above) followed by a data buffer followed by another object
     *     slice can be used to support delta upload functionality.
     * </pre>
     *
     * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
     */
    public Builder mergeReference(com.google.storage.v1.GetObjectMediaRequest value) {
      if (referenceBuilder_ == null) {
        if (dataCase_ == 5
            && data_ != com.google.storage.v1.GetObjectMediaRequest.getDefaultInstance()) {
          data_ =
              com.google.storage.v1.GetObjectMediaRequest.newBuilder(
                      (com.google.storage.v1.GetObjectMediaRequest) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 5) {
          referenceBuilder_.mergeFrom(value);
        }
        referenceBuilder_.setMessage(value);
      }
      dataCase_ = 5;
      return this;
    }
    /**
     *
     *
     * <pre>
     * A reference to an existing object. This can be used to support
     * several use cases:
     *   - Writing a sequence of data buffers supports the basic use case of
     *     uploading a complete object, chunk by chunk.
     *   - Writing a sequence of references to existing objects allows an
     *     object to be composed from a collection of objects, which can be
     *     used to support parallel object writes.
     *   - Writing a single reference with a given offset and size can be used
     *     to create an object from a slice of an existing object.
     *   - Writing an object referencing a object slice (created as noted
     *     above) followed by a data buffer followed by another object
     *     slice can be used to support delta upload functionality.
     * </pre>
     *
     * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
     */
    public Builder clearReference() {
      if (referenceBuilder_ == null) {
        if (dataCase_ == 5) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 5) {
          dataCase_ = 0;
          data_ = null;
        }
        referenceBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A reference to an existing object. This can be used to support
     * several use cases:
     *   - Writing a sequence of data buffers supports the basic use case of
     *     uploading a complete object, chunk by chunk.
     *   - Writing a sequence of references to existing objects allows an
     *     object to be composed from a collection of objects, which can be
     *     used to support parallel object writes.
     *   - Writing a single reference with a given offset and size can be used
     *     to create an object from a slice of an existing object.
     *   - Writing an object referencing a object slice (created as noted
     *     above) followed by a data buffer followed by another object
     *     slice can be used to support delta upload functionality.
     * </pre>
     *
     * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
     */
    public com.google.storage.v1.GetObjectMediaRequest.Builder getReferenceBuilder() {
      return getReferenceFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * A reference to an existing object. This can be used to support
     * several use cases:
     *   - Writing a sequence of data buffers supports the basic use case of
     *     uploading a complete object, chunk by chunk.
     *   - Writing a sequence of references to existing objects allows an
     *     object to be composed from a collection of objects, which can be
     *     used to support parallel object writes.
     *   - Writing a single reference with a given offset and size can be used
     *     to create an object from a slice of an existing object.
     *   - Writing an object referencing a object slice (created as noted
     *     above) followed by a data buffer followed by another object
     *     slice can be used to support delta upload functionality.
     * </pre>
     *
     * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
     */
    @java.lang.Override
    public com.google.storage.v1.GetObjectMediaRequestOrBuilder getReferenceOrBuilder() {
      if ((dataCase_ == 5) && (referenceBuilder_ != null)) {
        return referenceBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 5) {
          return (com.google.storage.v1.GetObjectMediaRequest) data_;
        }
        return com.google.storage.v1.GetObjectMediaRequest.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * A reference to an existing object. This can be used to support
     * several use cases:
     *   - Writing a sequence of data buffers supports the basic use case of
     *     uploading a complete object, chunk by chunk.
     *   - Writing a sequence of references to existing objects allows an
     *     object to be composed from a collection of objects, which can be
     *     used to support parallel object writes.
     *   - Writing a single reference with a given offset and size can be used
     *     to create an object from a slice of an existing object.
     *   - Writing an object referencing a object slice (created as noted
     *     above) followed by a data buffer followed by another object
     *     slice can be used to support delta upload functionality.
     * </pre>
     *
     * <code>.google.storage.v1.GetObjectMediaRequest reference = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.GetObjectMediaRequest,
            com.google.storage.v1.GetObjectMediaRequest.Builder,
            com.google.storage.v1.GetObjectMediaRequestOrBuilder>
        getReferenceFieldBuilder() {
      if (referenceBuilder_ == null) {
        if (!(dataCase_ == 5)) {
          data_ = com.google.storage.v1.GetObjectMediaRequest.getDefaultInstance();
        }
        referenceBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.storage.v1.GetObjectMediaRequest,
                com.google.storage.v1.GetObjectMediaRequest.Builder,
                com.google.storage.v1.GetObjectMediaRequestOrBuilder>(
                (com.google.storage.v1.GetObjectMediaRequest) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 5;
      onChanged();
      ;
      return referenceBuilder_;
    }

    private com.google.storage.v1.ObjectChecksums objectChecksums_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.ObjectChecksums,
            com.google.storage.v1.ObjectChecksums.Builder,
            com.google.storage.v1.ObjectChecksumsOrBuilder>
        objectChecksumsBuilder_;
    /**
     *
     *
     * <pre>
     * Checksums for the complete object. If the checksums computed by the service
     * don't match the specifified checksums the call will fail. May only be
     * provided in the first or last request (either with first_message, or
     * finish_write set).
     * </pre>
     *
     * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
     *
     * @return Whether the objectChecksums field is set.
     */
    public boolean hasObjectChecksums() {
      return objectChecksumsBuilder_ != null || objectChecksums_ != null;
    }
    /**
     *
     *
     * <pre>
     * Checksums for the complete object. If the checksums computed by the service
     * don't match the specifified checksums the call will fail. May only be
     * provided in the first or last request (either with first_message, or
     * finish_write set).
     * </pre>
     *
     * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
     *
     * @return The objectChecksums.
     */
    public com.google.storage.v1.ObjectChecksums getObjectChecksums() {
      if (objectChecksumsBuilder_ == null) {
        return objectChecksums_ == null
            ? com.google.storage.v1.ObjectChecksums.getDefaultInstance()
            : objectChecksums_;
      } else {
        return objectChecksumsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Checksums for the complete object. If the checksums computed by the service
     * don't match the specifified checksums the call will fail. May only be
     * provided in the first or last request (either with first_message, or
     * finish_write set).
     * </pre>
     *
     * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
     */
    public Builder setObjectChecksums(com.google.storage.v1.ObjectChecksums value) {
      if (objectChecksumsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        objectChecksums_ = value;
        onChanged();
      } else {
        objectChecksumsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Checksums for the complete object. If the checksums computed by the service
     * don't match the specifified checksums the call will fail. May only be
     * provided in the first or last request (either with first_message, or
     * finish_write set).
     * </pre>
     *
     * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
     */
    public Builder setObjectChecksums(
        com.google.storage.v1.ObjectChecksums.Builder builderForValue) {
      if (objectChecksumsBuilder_ == null) {
        objectChecksums_ = builderForValue.build();
        onChanged();
      } else {
        objectChecksumsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Checksums for the complete object. If the checksums computed by the service
     * don't match the specifified checksums the call will fail. May only be
     * provided in the first or last request (either with first_message, or
     * finish_write set).
     * </pre>
     *
     * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
     */
    public Builder mergeObjectChecksums(com.google.storage.v1.ObjectChecksums value) {
      if (objectChecksumsBuilder_ == null) {
        if (objectChecksums_ != null) {
          objectChecksums_ =
              com.google.storage.v1.ObjectChecksums.newBuilder(objectChecksums_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          objectChecksums_ = value;
        }
        onChanged();
      } else {
        objectChecksumsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Checksums for the complete object. If the checksums computed by the service
     * don't match the specifified checksums the call will fail. May only be
     * provided in the first or last request (either with first_message, or
     * finish_write set).
     * </pre>
     *
     * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
     */
    public Builder clearObjectChecksums() {
      if (objectChecksumsBuilder_ == null) {
        objectChecksums_ = null;
        onChanged();
      } else {
        objectChecksums_ = null;
        objectChecksumsBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Checksums for the complete object. If the checksums computed by the service
     * don't match the specifified checksums the call will fail. May only be
     * provided in the first or last request (either with first_message, or
     * finish_write set).
     * </pre>
     *
     * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
     */
    public com.google.storage.v1.ObjectChecksums.Builder getObjectChecksumsBuilder() {

      onChanged();
      return getObjectChecksumsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Checksums for the complete object. If the checksums computed by the service
     * don't match the specifified checksums the call will fail. May only be
     * provided in the first or last request (either with first_message, or
     * finish_write set).
     * </pre>
     *
     * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
     */
    public com.google.storage.v1.ObjectChecksumsOrBuilder getObjectChecksumsOrBuilder() {
      if (objectChecksumsBuilder_ != null) {
        return objectChecksumsBuilder_.getMessageOrBuilder();
      } else {
        return objectChecksums_ == null
            ? com.google.storage.v1.ObjectChecksums.getDefaultInstance()
            : objectChecksums_;
      }
    }
    /**
     *
     *
     * <pre>
     * Checksums for the complete object. If the checksums computed by the service
     * don't match the specifified checksums the call will fail. May only be
     * provided in the first or last request (either with first_message, or
     * finish_write set).
     * </pre>
     *
     * <code>.google.storage.v1.ObjectChecksums object_checksums = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.ObjectChecksums,
            com.google.storage.v1.ObjectChecksums.Builder,
            com.google.storage.v1.ObjectChecksumsOrBuilder>
        getObjectChecksumsFieldBuilder() {
      if (objectChecksumsBuilder_ == null) {
        objectChecksumsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.storage.v1.ObjectChecksums,
                com.google.storage.v1.ObjectChecksums.Builder,
                com.google.storage.v1.ObjectChecksumsOrBuilder>(
                getObjectChecksums(), getParentForChildren(), isClean());
        objectChecksums_ = null;
      }
      return objectChecksumsBuilder_;
    }

    private boolean finishWrite_;
    /**
     *
     *
     * <pre>
     * If `true`, this indicates that the write is complete. Sending any
     * `InsertObjectRequest`s subsequent to one in which `finish_write` is `true`
     * will cause an error.
     * For a non-resumable write (where the upload_id was not set in the first
     * message), it is an error not to set this field in the final message of the
     * stream.
     * </pre>
     *
     * <code>bool finish_write = 7;</code>
     *
     * @return The finishWrite.
     */
    @java.lang.Override
    public boolean getFinishWrite() {
      return finishWrite_;
    }
    /**
     *
     *
     * <pre>
     * If `true`, this indicates that the write is complete. Sending any
     * `InsertObjectRequest`s subsequent to one in which `finish_write` is `true`
     * will cause an error.
     * For a non-resumable write (where the upload_id was not set in the first
     * message), it is an error not to set this field in the final message of the
     * stream.
     * </pre>
     *
     * <code>bool finish_write = 7;</code>
     *
     * @param value The finishWrite to set.
     * @return This builder for chaining.
     */
    public Builder setFinishWrite(boolean value) {

      finishWrite_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * If `true`, this indicates that the write is complete. Sending any
     * `InsertObjectRequest`s subsequent to one in which `finish_write` is `true`
     * will cause an error.
     * For a non-resumable write (where the upload_id was not set in the first
     * message), it is an error not to set this field in the final message of the
     * stream.
     * </pre>
     *
     * <code>bool finish_write = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFinishWrite() {

      finishWrite_ = false;
      onChanged();
      return this;
    }

    private com.google.storage.v1.CommonObjectRequestParams commonObjectRequestParams_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.CommonObjectRequestParams,
            com.google.storage.v1.CommonObjectRequestParams.Builder,
            com.google.storage.v1.CommonObjectRequestParamsOrBuilder>
        commonObjectRequestParamsBuilder_;
    /**
     *
     *
     * <pre>
     * A set of parameters common to Storage API requests concerning an object.
     * </pre>
     *
     * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
     *
     * @return Whether the commonObjectRequestParams field is set.
     */
    public boolean hasCommonObjectRequestParams() {
      return commonObjectRequestParamsBuilder_ != null || commonObjectRequestParams_ != null;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to Storage API requests concerning an object.
     * </pre>
     *
     * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
     *
     * @return The commonObjectRequestParams.
     */
    public com.google.storage.v1.CommonObjectRequestParams getCommonObjectRequestParams() {
      if (commonObjectRequestParamsBuilder_ == null) {
        return commonObjectRequestParams_ == null
            ? com.google.storage.v1.CommonObjectRequestParams.getDefaultInstance()
            : commonObjectRequestParams_;
      } else {
        return commonObjectRequestParamsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to Storage API requests concerning an object.
     * </pre>
     *
     * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
     */
    public Builder setCommonObjectRequestParams(
        com.google.storage.v1.CommonObjectRequestParams value) {
      if (commonObjectRequestParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        commonObjectRequestParams_ = value;
        onChanged();
      } else {
        commonObjectRequestParamsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to Storage API requests concerning an object.
     * </pre>
     *
     * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
     */
    public Builder setCommonObjectRequestParams(
        com.google.storage.v1.CommonObjectRequestParams.Builder builderForValue) {
      if (commonObjectRequestParamsBuilder_ == null) {
        commonObjectRequestParams_ = builderForValue.build();
        onChanged();
      } else {
        commonObjectRequestParamsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to Storage API requests concerning an object.
     * </pre>
     *
     * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
     */
    public Builder mergeCommonObjectRequestParams(
        com.google.storage.v1.CommonObjectRequestParams value) {
      if (commonObjectRequestParamsBuilder_ == null) {
        if (commonObjectRequestParams_ != null) {
          commonObjectRequestParams_ =
              com.google.storage.v1.CommonObjectRequestParams.newBuilder(commonObjectRequestParams_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          commonObjectRequestParams_ = value;
        }
        onChanged();
      } else {
        commonObjectRequestParamsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to Storage API requests concerning an object.
     * </pre>
     *
     * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
     */
    public Builder clearCommonObjectRequestParams() {
      if (commonObjectRequestParamsBuilder_ == null) {
        commonObjectRequestParams_ = null;
        onChanged();
      } else {
        commonObjectRequestParams_ = null;
        commonObjectRequestParamsBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to Storage API requests concerning an object.
     * </pre>
     *
     * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
     */
    public com.google.storage.v1.CommonObjectRequestParams.Builder
        getCommonObjectRequestParamsBuilder() {

      onChanged();
      return getCommonObjectRequestParamsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to Storage API requests concerning an object.
     * </pre>
     *
     * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
     */
    public com.google.storage.v1.CommonObjectRequestParamsOrBuilder
        getCommonObjectRequestParamsOrBuilder() {
      if (commonObjectRequestParamsBuilder_ != null) {
        return commonObjectRequestParamsBuilder_.getMessageOrBuilder();
      } else {
        return commonObjectRequestParams_ == null
            ? com.google.storage.v1.CommonObjectRequestParams.getDefaultInstance()
            : commonObjectRequestParams_;
      }
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to Storage API requests concerning an object.
     * </pre>
     *
     * <code>.google.storage.v1.CommonObjectRequestParams common_object_request_params = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.CommonObjectRequestParams,
            com.google.storage.v1.CommonObjectRequestParams.Builder,
            com.google.storage.v1.CommonObjectRequestParamsOrBuilder>
        getCommonObjectRequestParamsFieldBuilder() {
      if (commonObjectRequestParamsBuilder_ == null) {
        commonObjectRequestParamsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.storage.v1.CommonObjectRequestParams,
                com.google.storage.v1.CommonObjectRequestParams.Builder,
                com.google.storage.v1.CommonObjectRequestParamsOrBuilder>(
                getCommonObjectRequestParams(), getParentForChildren(), isClean());
        commonObjectRequestParams_ = null;
      }
      return commonObjectRequestParamsBuilder_;
    }

    private com.google.storage.v1.CommonRequestParams commonRequestParams_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.CommonRequestParams,
            com.google.storage.v1.CommonRequestParams.Builder,
            com.google.storage.v1.CommonRequestParamsOrBuilder>
        commonRequestParamsBuilder_;
    /**
     *
     *
     * <pre>
     * A set of parameters common to all Storage API requests.
     * </pre>
     *
     * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
     *
     * @return Whether the commonRequestParams field is set.
     */
    public boolean hasCommonRequestParams() {
      return commonRequestParamsBuilder_ != null || commonRequestParams_ != null;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to all Storage API requests.
     * </pre>
     *
     * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
     *
     * @return The commonRequestParams.
     */
    public com.google.storage.v1.CommonRequestParams getCommonRequestParams() {
      if (commonRequestParamsBuilder_ == null) {
        return commonRequestParams_ == null
            ? com.google.storage.v1.CommonRequestParams.getDefaultInstance()
            : commonRequestParams_;
      } else {
        return commonRequestParamsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to all Storage API requests.
     * </pre>
     *
     * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
     */
    public Builder setCommonRequestParams(com.google.storage.v1.CommonRequestParams value) {
      if (commonRequestParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        commonRequestParams_ = value;
        onChanged();
      } else {
        commonRequestParamsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to all Storage API requests.
     * </pre>
     *
     * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
     */
    public Builder setCommonRequestParams(
        com.google.storage.v1.CommonRequestParams.Builder builderForValue) {
      if (commonRequestParamsBuilder_ == null) {
        commonRequestParams_ = builderForValue.build();
        onChanged();
      } else {
        commonRequestParamsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to all Storage API requests.
     * </pre>
     *
     * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
     */
    public Builder mergeCommonRequestParams(com.google.storage.v1.CommonRequestParams value) {
      if (commonRequestParamsBuilder_ == null) {
        if (commonRequestParams_ != null) {
          commonRequestParams_ =
              com.google.storage.v1.CommonRequestParams.newBuilder(commonRequestParams_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          commonRequestParams_ = value;
        }
        onChanged();
      } else {
        commonRequestParamsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to all Storage API requests.
     * </pre>
     *
     * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
     */
    public Builder clearCommonRequestParams() {
      if (commonRequestParamsBuilder_ == null) {
        commonRequestParams_ = null;
        onChanged();
      } else {
        commonRequestParams_ = null;
        commonRequestParamsBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to all Storage API requests.
     * </pre>
     *
     * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
     */
    public com.google.storage.v1.CommonRequestParams.Builder getCommonRequestParamsBuilder() {

      onChanged();
      return getCommonRequestParamsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to all Storage API requests.
     * </pre>
     *
     * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
     */
    public com.google.storage.v1.CommonRequestParamsOrBuilder getCommonRequestParamsOrBuilder() {
      if (commonRequestParamsBuilder_ != null) {
        return commonRequestParamsBuilder_.getMessageOrBuilder();
      } else {
        return commonRequestParams_ == null
            ? com.google.storage.v1.CommonRequestParams.getDefaultInstance()
            : commonRequestParams_;
      }
    }
    /**
     *
     *
     * <pre>
     * A set of parameters common to all Storage API requests.
     * </pre>
     *
     * <code>.google.storage.v1.CommonRequestParams common_request_params = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.storage.v1.CommonRequestParams,
            com.google.storage.v1.CommonRequestParams.Builder,
            com.google.storage.v1.CommonRequestParamsOrBuilder>
        getCommonRequestParamsFieldBuilder() {
      if (commonRequestParamsBuilder_ == null) {
        commonRequestParamsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.storage.v1.CommonRequestParams,
                com.google.storage.v1.CommonRequestParams.Builder,
                com.google.storage.v1.CommonRequestParamsOrBuilder>(
                getCommonRequestParams(), getParentForChildren(), isClean());
        commonRequestParams_ = null;
      }
      return commonRequestParamsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.storage.v1.InsertObjectRequest)
  }

  // @@protoc_insertion_point(class_scope:google.storage.v1.InsertObjectRequest)
  private static final com.google.storage.v1.InsertObjectRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.storage.v1.InsertObjectRequest();
  }

  public static com.google.storage.v1.InsertObjectRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InsertObjectRequest> PARSER =
      new com.google.protobuf.AbstractParser<InsertObjectRequest>() {
        @java.lang.Override
        public InsertObjectRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InsertObjectRequest(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<InsertObjectRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InsertObjectRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.storage.v1.InsertObjectRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
