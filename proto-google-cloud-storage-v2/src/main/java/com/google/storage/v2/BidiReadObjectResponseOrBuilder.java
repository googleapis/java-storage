/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storage/v2/storage.proto

// Protobuf Java Version: 3.25.5
package com.google.storage.v2;

public interface BidiReadObjectResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.storage.v2.BidiReadObjectResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * A portion of the object's data. The service **may** leave data
   * empty for any given ReadResponse. This enables the service to inform the
   * client that the request is still live while it is running an operation to
   * generate more data.
   * The service **may** pipeline multiple responses belonging to different read
   * requests. Each ObjectRangeData entry will have a read_id
   * set to the same value as the corresponding source read request.
   * </pre>
   *
   * <code>repeated .google.storage.v2.ObjectRangeData object_data_ranges = 6;</code>
   */
  java.util.List<com.google.storage.v2.ObjectRangeData> getObjectDataRangesList();

  /**
   *
   *
   * <pre>
   * A portion of the object's data. The service **may** leave data
   * empty for any given ReadResponse. This enables the service to inform the
   * client that the request is still live while it is running an operation to
   * generate more data.
   * The service **may** pipeline multiple responses belonging to different read
   * requests. Each ObjectRangeData entry will have a read_id
   * set to the same value as the corresponding source read request.
   * </pre>
   *
   * <code>repeated .google.storage.v2.ObjectRangeData object_data_ranges = 6;</code>
   */
  com.google.storage.v2.ObjectRangeData getObjectDataRanges(int index);

  /**
   *
   *
   * <pre>
   * A portion of the object's data. The service **may** leave data
   * empty for any given ReadResponse. This enables the service to inform the
   * client that the request is still live while it is running an operation to
   * generate more data.
   * The service **may** pipeline multiple responses belonging to different read
   * requests. Each ObjectRangeData entry will have a read_id
   * set to the same value as the corresponding source read request.
   * </pre>
   *
   * <code>repeated .google.storage.v2.ObjectRangeData object_data_ranges = 6;</code>
   */
  int getObjectDataRangesCount();

  /**
   *
   *
   * <pre>
   * A portion of the object's data. The service **may** leave data
   * empty for any given ReadResponse. This enables the service to inform the
   * client that the request is still live while it is running an operation to
   * generate more data.
   * The service **may** pipeline multiple responses belonging to different read
   * requests. Each ObjectRangeData entry will have a read_id
   * set to the same value as the corresponding source read request.
   * </pre>
   *
   * <code>repeated .google.storage.v2.ObjectRangeData object_data_ranges = 6;</code>
   */
  java.util.List<? extends com.google.storage.v2.ObjectRangeDataOrBuilder>
      getObjectDataRangesOrBuilderList();

  /**
   *
   *
   * <pre>
   * A portion of the object's data. The service **may** leave data
   * empty for any given ReadResponse. This enables the service to inform the
   * client that the request is still live while it is running an operation to
   * generate more data.
   * The service **may** pipeline multiple responses belonging to different read
   * requests. Each ObjectRangeData entry will have a read_id
   * set to the same value as the corresponding source read request.
   * </pre>
   *
   * <code>repeated .google.storage.v2.ObjectRangeData object_data_ranges = 6;</code>
   */
  com.google.storage.v2.ObjectRangeDataOrBuilder getObjectDataRangesOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Metadata of the object whose media is being returned.
   * Only populated in the first response in the stream and not populated when
   * the stream is opened with a read handle.
   * </pre>
   *
   * <code>.google.storage.v2.Object metadata = 4;</code>
   *
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();

  /**
   *
   *
   * <pre>
   * Metadata of the object whose media is being returned.
   * Only populated in the first response in the stream and not populated when
   * the stream is opened with a read handle.
   * </pre>
   *
   * <code>.google.storage.v2.Object metadata = 4;</code>
   *
   * @return The metadata.
   */
  com.google.storage.v2.Object getMetadata();

  /**
   *
   *
   * <pre>
   * Metadata of the object whose media is being returned.
   * Only populated in the first response in the stream and not populated when
   * the stream is opened with a read handle.
   * </pre>
   *
   * <code>.google.storage.v2.Object metadata = 4;</code>
   */
  com.google.storage.v2.ObjectOrBuilder getMetadataOrBuilder();

  /**
   *
   *
   * <pre>
   * This field will be periodically refreshed, however it may not be set in
   * every response. It allows the client to more efficiently open subsequent
   * bidirectional streams to the same object.
   * </pre>
   *
   * <code>.google.storage.v2.BidiReadHandle read_handle = 7;</code>
   *
   * @return Whether the readHandle field is set.
   */
  boolean hasReadHandle();

  /**
   *
   *
   * <pre>
   * This field will be periodically refreshed, however it may not be set in
   * every response. It allows the client to more efficiently open subsequent
   * bidirectional streams to the same object.
   * </pre>
   *
   * <code>.google.storage.v2.BidiReadHandle read_handle = 7;</code>
   *
   * @return The readHandle.
   */
  com.google.storage.v2.BidiReadHandle getReadHandle();

  /**
   *
   *
   * <pre>
   * This field will be periodically refreshed, however it may not be set in
   * every response. It allows the client to more efficiently open subsequent
   * bidirectional streams to the same object.
   * </pre>
   *
   * <code>.google.storage.v2.BidiReadHandle read_handle = 7;</code>
   */
  com.google.storage.v2.BidiReadHandleOrBuilder getReadHandleOrBuilder();
}
