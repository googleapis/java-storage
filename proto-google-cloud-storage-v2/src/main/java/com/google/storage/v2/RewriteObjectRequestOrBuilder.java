/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storage/v2/storage.proto

package com.google.storage.v2;

public interface RewriteObjectRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.storage.v2.RewriteObjectRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Properties of the destination, post-rewrite object.
   * Includes bucket name, object name, KMS key.
   * </pre>
   *
   * <code>.google.storage.v2.Object destination = 1;</code>
   *
   * @return Whether the destination field is set.
   */
  boolean hasDestination();
  /**
   *
   *
   * <pre>
   * Properties of the destination, post-rewrite object.
   * Includes bucket name, object name, KMS key.
   * </pre>
   *
   * <code>.google.storage.v2.Object destination = 1;</code>
   *
   * @return The destination.
   */
  com.google.storage.v2.Object getDestination();
  /**
   *
   *
   * <pre>
   * Properties of the destination, post-rewrite object.
   * Includes bucket name, object name, KMS key.
   * </pre>
   *
   * <code>.google.storage.v2.Object destination = 1;</code>
   */
  com.google.storage.v2.ObjectOrBuilder getDestinationOrBuilder();

  /**
   *
   *
   * <pre>
   * List of fields to be updated in the destination object from `destination`.
   * If the mask is not present, all fields from the source object will be
   * copied excepting ACL. If the mask is present but specifies no fields, no
   * fields will be copied.
   * Non-ACL metadata not included in the mask will be copied from the source
   * object.
   * If not present, all fields from the destination will be set from
   * `destination`.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask rewrite_mask = 23;</code>
   *
   * @return Whether the rewriteMask field is set.
   */
  boolean hasRewriteMask();
  /**
   *
   *
   * <pre>
   * List of fields to be updated in the destination object from `destination`.
   * If the mask is not present, all fields from the source object will be
   * copied excepting ACL. If the mask is present but specifies no fields, no
   * fields will be copied.
   * Non-ACL metadata not included in the mask will be copied from the source
   * object.
   * If not present, all fields from the destination will be set from
   * `destination`.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask rewrite_mask = 23;</code>
   *
   * @return The rewriteMask.
   */
  com.google.protobuf.FieldMask getRewriteMask();
  /**
   *
   *
   * <pre>
   * List of fields to be updated in the destination object from `destination`.
   * If the mask is not present, all fields from the source object will be
   * copied excepting ACL. If the mask is present but specifies no fields, no
   * fields will be copied.
   * Non-ACL metadata not included in the mask will be copied from the source
   * object.
   * If not present, all fields from the destination will be set from
   * `destination`.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask rewrite_mask = 23;</code>
   */
  com.google.protobuf.FieldMaskOrBuilder getRewriteMaskOrBuilder();

  /**
   *
   *
   * <pre>
   * Required. Name of the bucket in which to find the source object.
   * </pre>
   *
   * <code>string source_bucket = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The sourceBucket.
   */
  java.lang.String getSourceBucket();
  /**
   *
   *
   * <pre>
   * Required. Name of the bucket in which to find the source object.
   * </pre>
   *
   * <code>string source_bucket = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for sourceBucket.
   */
  com.google.protobuf.ByteString getSourceBucketBytes();

  /**
   *
   *
   * <pre>
   * Required. Name of the source object.
   * </pre>
   *
   * <code>string source_object = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The sourceObject.
   */
  java.lang.String getSourceObject();
  /**
   *
   *
   * <pre>
   * Required. Name of the source object.
   * </pre>
   *
   * <code>string source_object = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for sourceObject.
   */
  com.google.protobuf.ByteString getSourceObjectBytes();

  /**
   *
   *
   * <pre>
   * If present, selects a specific revision of the source object (as opposed to
   * the latest version, the default).
   * </pre>
   *
   * <code>int64 source_generation = 4;</code>
   *
   * @return The sourceGeneration.
   */
  long getSourceGeneration();

  /**
   *
   *
   * <pre>
   * Include this field (from the previous rewrite response) on each rewrite
   * request after the first one, until the rewrite response 'done' flag is
   * true. Calls that provide a rewriteToken can omit all other request fields,
   * but if included those fields must match the values provided in the first
   * rewrite request.
   * </pre>
   *
   * <code>string rewrite_token = 5;</code>
   *
   * @return The rewriteToken.
   */
  java.lang.String getRewriteToken();
  /**
   *
   *
   * <pre>
   * Include this field (from the previous rewrite response) on each rewrite
   * request after the first one, until the rewrite response 'done' flag is
   * true. Calls that provide a rewriteToken can omit all other request fields,
   * but if included those fields must match the values provided in the first
   * rewrite request.
   * </pre>
   *
   * <code>string rewrite_token = 5;</code>
   *
   * @return The bytes for rewriteToken.
   */
  com.google.protobuf.ByteString getRewriteTokenBytes();

  /**
   *
   *
   * <pre>
   * Apply a predefined set of access controls to the destination object.
   * </pre>
   *
   * <code>.google.storage.v2.PredefinedObjectAcl destination_predefined_acl = 6;</code>
   *
   * @return The enum numeric value on the wire for destinationPredefinedAcl.
   */
  int getDestinationPredefinedAclValue();
  /**
   *
   *
   * <pre>
   * Apply a predefined set of access controls to the destination object.
   * </pre>
   *
   * <code>.google.storage.v2.PredefinedObjectAcl destination_predefined_acl = 6;</code>
   *
   * @return The destinationPredefinedAcl.
   */
  com.google.storage.v2.PredefinedObjectAcl getDestinationPredefinedAcl();

  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the object's current generation
   * matches the given value. Setting to 0 makes the operation succeed only if
   * there are no live versions of the object.
   * </pre>
   *
   * <code>optional int64 if_generation_match = 7;</code>
   *
   * @return Whether the ifGenerationMatch field is set.
   */
  boolean hasIfGenerationMatch();
  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the object's current generation
   * matches the given value. Setting to 0 makes the operation succeed only if
   * there are no live versions of the object.
   * </pre>
   *
   * <code>optional int64 if_generation_match = 7;</code>
   *
   * @return The ifGenerationMatch.
   */
  long getIfGenerationMatch();

  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the object's current generation
   * does not match the given value. If no live object exists, the precondition
   * fails. Setting to 0 makes the operation succeed only if there is a live
   * version of the object.
   * </pre>
   *
   * <code>optional int64 if_generation_not_match = 8;</code>
   *
   * @return Whether the ifGenerationNotMatch field is set.
   */
  boolean hasIfGenerationNotMatch();
  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the object's current generation
   * does not match the given value. If no live object exists, the precondition
   * fails. Setting to 0 makes the operation succeed only if there is a live
   * version of the object.
   * </pre>
   *
   * <code>optional int64 if_generation_not_match = 8;</code>
   *
   * @return The ifGenerationNotMatch.
   */
  long getIfGenerationNotMatch();

  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the destination object's current
   * metageneration matches the given value.
   * </pre>
   *
   * <code>optional int64 if_metageneration_match = 9;</code>
   *
   * @return Whether the ifMetagenerationMatch field is set.
   */
  boolean hasIfMetagenerationMatch();
  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the destination object's current
   * metageneration matches the given value.
   * </pre>
   *
   * <code>optional int64 if_metageneration_match = 9;</code>
   *
   * @return The ifMetagenerationMatch.
   */
  long getIfMetagenerationMatch();

  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the destination object's current
   * metageneration does not match the given value.
   * </pre>
   *
   * <code>optional int64 if_metageneration_not_match = 10;</code>
   *
   * @return Whether the ifMetagenerationNotMatch field is set.
   */
  boolean hasIfMetagenerationNotMatch();
  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the destination object's current
   * metageneration does not match the given value.
   * </pre>
   *
   * <code>optional int64 if_metageneration_not_match = 10;</code>
   *
   * @return The ifMetagenerationNotMatch.
   */
  long getIfMetagenerationNotMatch();

  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the source object's current
   * generation matches the given value.
   * </pre>
   *
   * <code>optional int64 if_source_generation_match = 11;</code>
   *
   * @return Whether the ifSourceGenerationMatch field is set.
   */
  boolean hasIfSourceGenerationMatch();
  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the source object's current
   * generation matches the given value.
   * </pre>
   *
   * <code>optional int64 if_source_generation_match = 11;</code>
   *
   * @return The ifSourceGenerationMatch.
   */
  long getIfSourceGenerationMatch();

  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the source object's current
   * generation does not match the given value.
   * </pre>
   *
   * <code>optional int64 if_source_generation_not_match = 12;</code>
   *
   * @return Whether the ifSourceGenerationNotMatch field is set.
   */
  boolean hasIfSourceGenerationNotMatch();
  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the source object's current
   * generation does not match the given value.
   * </pre>
   *
   * <code>optional int64 if_source_generation_not_match = 12;</code>
   *
   * @return The ifSourceGenerationNotMatch.
   */
  long getIfSourceGenerationNotMatch();

  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the source object's current
   * metageneration matches the given value.
   * </pre>
   *
   * <code>optional int64 if_source_metageneration_match = 13;</code>
   *
   * @return Whether the ifSourceMetagenerationMatch field is set.
   */
  boolean hasIfSourceMetagenerationMatch();
  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the source object's current
   * metageneration matches the given value.
   * </pre>
   *
   * <code>optional int64 if_source_metageneration_match = 13;</code>
   *
   * @return The ifSourceMetagenerationMatch.
   */
  long getIfSourceMetagenerationMatch();

  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the source object's current
   * metageneration does not match the given value.
   * </pre>
   *
   * <code>optional int64 if_source_metageneration_not_match = 14;</code>
   *
   * @return Whether the ifSourceMetagenerationNotMatch field is set.
   */
  boolean hasIfSourceMetagenerationNotMatch();
  /**
   *
   *
   * <pre>
   * Makes the operation conditional on whether the source object's current
   * metageneration does not match the given value.
   * </pre>
   *
   * <code>optional int64 if_source_metageneration_not_match = 14;</code>
   *
   * @return The ifSourceMetagenerationNotMatch.
   */
  long getIfSourceMetagenerationNotMatch();

  /**
   *
   *
   * <pre>
   * The maximum number of bytes that will be rewritten per rewrite request.
   * Most callers
   * shouldn't need to specify this parameter - it is primarily in place to
   * support testing. If specified the value must be an integral multiple of
   * 1 MiB (1048576). Also, this only applies to requests where the source and
   * destination span locations and/or storage classes. Finally, this value must
   * not change across rewrite calls else you'll get an error that the
   * `rewriteToken` is invalid.
   * </pre>
   *
   * <code>int64 max_bytes_rewritten_per_call = 15;</code>
   *
   * @return The maxBytesRewrittenPerCall.
   */
  long getMaxBytesRewrittenPerCall();

  /**
   *
   *
   * <pre>
   * The algorithm used to encrypt the source object, if any.
   * </pre>
   *
   * <code>string copy_source_encryption_algorithm = 16;</code>
   *
   * @return The copySourceEncryptionAlgorithm.
   */
  java.lang.String getCopySourceEncryptionAlgorithm();
  /**
   *
   *
   * <pre>
   * The algorithm used to encrypt the source object, if any.
   * </pre>
   *
   * <code>string copy_source_encryption_algorithm = 16;</code>
   *
   * @return The bytes for copySourceEncryptionAlgorithm.
   */
  com.google.protobuf.ByteString getCopySourceEncryptionAlgorithmBytes();

  /**
   *
   *
   * <pre>
   * The encryption key used to encrypt the source object, if any.
   * In raw bytes format (not base64-encoded).
   * </pre>
   *
   * <code>bytes copy_source_encryption_key_bytes = 21;</code>
   *
   * @return The copySourceEncryptionKeyBytes.
   */
  com.google.protobuf.ByteString getCopySourceEncryptionKeyBytes();

  /**
   *
   *
   * <pre>
   * The SHA-256 hash of the key used to encrypt the source object, if any.
   * In raw bytes format (not base64-encoded).
   * </pre>
   *
   * <code>bytes copy_source_encryption_key_sha256_bytes = 22;</code>
   *
   * @return The copySourceEncryptionKeySha256Bytes.
   */
  com.google.protobuf.ByteString getCopySourceEncryptionKeySha256Bytes();

  /**
   *
   *
   * <pre>
   * A set of parameters common to Storage API requests concerning an object.
   * </pre>
   *
   * <code>.google.storage.v2.CommonObjectRequestParams common_object_request_params = 19;</code>
   *
   * @return Whether the commonObjectRequestParams field is set.
   */
  boolean hasCommonObjectRequestParams();
  /**
   *
   *
   * <pre>
   * A set of parameters common to Storage API requests concerning an object.
   * </pre>
   *
   * <code>.google.storage.v2.CommonObjectRequestParams common_object_request_params = 19;</code>
   *
   * @return The commonObjectRequestParams.
   */
  com.google.storage.v2.CommonObjectRequestParams getCommonObjectRequestParams();
  /**
   *
   *
   * <pre>
   * A set of parameters common to Storage API requests concerning an object.
   * </pre>
   *
   * <code>.google.storage.v2.CommonObjectRequestParams common_object_request_params = 19;</code>
   */
  com.google.storage.v2.CommonObjectRequestParamsOrBuilder getCommonObjectRequestParamsOrBuilder();

  /**
   *
   *
   * <pre>
   * A set of parameters common to all Storage API requests.
   * </pre>
   *
   * <code>.google.storage.v2.CommonRequestParams common_request_params = 20;</code>
   *
   * @return Whether the commonRequestParams field is set.
   */
  boolean hasCommonRequestParams();
  /**
   *
   *
   * <pre>
   * A set of parameters common to all Storage API requests.
   * </pre>
   *
   * <code>.google.storage.v2.CommonRequestParams common_request_params = 20;</code>
   *
   * @return The commonRequestParams.
   */
  com.google.storage.v2.CommonRequestParams getCommonRequestParams();
  /**
   *
   *
   * <pre>
   * A set of parameters common to all Storage API requests.
   * </pre>
   *
   * <code>.google.storage.v2.CommonRequestParams common_request_params = 20;</code>
   */
  com.google.storage.v2.CommonRequestParamsOrBuilder getCommonRequestParamsOrBuilder();
}
