/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storage/control/v2/storage_control.proto

// Protobuf Java Version: 3.25.5
package com.google.storage.control.v2;

public interface UpdateAnywhereCacheMetadataOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.storage.control.v2.UpdateAnywhereCacheMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Generic metadata for the long running operation.
   * </pre>
   *
   * <code>.google.storage.control.v2.CommonLongRunningOperationMetadata common_metadata = 1;</code>
   *
   * @return Whether the commonMetadata field is set.
   */
  boolean hasCommonMetadata();

  /**
   *
   *
   * <pre>
   * Generic metadata for the long running operation.
   * </pre>
   *
   * <code>.google.storage.control.v2.CommonLongRunningOperationMetadata common_metadata = 1;</code>
   *
   * @return The commonMetadata.
   */
  com.google.storage.control.v2.CommonLongRunningOperationMetadata getCommonMetadata();

  /**
   *
   *
   * <pre>
   * Generic metadata for the long running operation.
   * </pre>
   *
   * <code>.google.storage.control.v2.CommonLongRunningOperationMetadata common_metadata = 1;</code>
   */
  com.google.storage.control.v2.CommonLongRunningOperationMetadataOrBuilder
      getCommonMetadataOrBuilder();

  /**
   *
   *
   * <pre>
   * Anywhere Cache ID.
   * </pre>
   *
   * <code>optional string anywhere_cache_id = 2;</code>
   *
   * @return Whether the anywhereCacheId field is set.
   */
  boolean hasAnywhereCacheId();

  /**
   *
   *
   * <pre>
   * Anywhere Cache ID.
   * </pre>
   *
   * <code>optional string anywhere_cache_id = 2;</code>
   *
   * @return The anywhereCacheId.
   */
  java.lang.String getAnywhereCacheId();

  /**
   *
   *
   * <pre>
   * Anywhere Cache ID.
   * </pre>
   *
   * <code>optional string anywhere_cache_id = 2;</code>
   *
   * @return The bytes for anywhereCacheId.
   */
  com.google.protobuf.ByteString getAnywhereCacheIdBytes();

  /**
   *
   *
   * <pre>
   * The zone in which the cache instance is running. For example,
   * us-central1-a.
   * </pre>
   *
   * <code>optional string zone = 5;</code>
   *
   * @return Whether the zone field is set.
   */
  boolean hasZone();

  /**
   *
   *
   * <pre>
   * The zone in which the cache instance is running. For example,
   * us-central1-a.
   * </pre>
   *
   * <code>optional string zone = 5;</code>
   *
   * @return The zone.
   */
  java.lang.String getZone();

  /**
   *
   *
   * <pre>
   * The zone in which the cache instance is running. For example,
   * us-central1-a.
   * </pre>
   *
   * <code>optional string zone = 5;</code>
   *
   * @return The bytes for zone.
   */
  com.google.protobuf.ByteString getZoneBytes();

  /**
   *
   *
   * <pre>
   * Anywhere Cache entry's TTL between 1h and 7days. A cache-level config that
   * is applied to all new cache entries on admission. If `ttl` is pending
   * update, this field equals to the new value specified in the Update request.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration ttl = 3;</code>
   *
   * @return Whether the ttl field is set.
   */
  boolean hasTtl();

  /**
   *
   *
   * <pre>
   * Anywhere Cache entry's TTL between 1h and 7days. A cache-level config that
   * is applied to all new cache entries on admission. If `ttl` is pending
   * update, this field equals to the new value specified in the Update request.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration ttl = 3;</code>
   *
   * @return The ttl.
   */
  com.google.protobuf.Duration getTtl();

  /**
   *
   *
   * <pre>
   * Anywhere Cache entry's TTL between 1h and 7days. A cache-level config that
   * is applied to all new cache entries on admission. If `ttl` is pending
   * update, this field equals to the new value specified in the Update request.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration ttl = 3;</code>
   */
  com.google.protobuf.DurationOrBuilder getTtlOrBuilder();

  /**
   *
   *
   * <pre>
   * L4 Cache entry Admission Policy in kebab-case (e.g.,
   * "admit-on-first-miss"). If `admission_policy` is pending
   * update, this field equals to the new value specified in the Update request.
   * </pre>
   *
   * <code>optional string admission_policy = 4;</code>
   *
   * @return Whether the admissionPolicy field is set.
   */
  boolean hasAdmissionPolicy();

  /**
   *
   *
   * <pre>
   * L4 Cache entry Admission Policy in kebab-case (e.g.,
   * "admit-on-first-miss"). If `admission_policy` is pending
   * update, this field equals to the new value specified in the Update request.
   * </pre>
   *
   * <code>optional string admission_policy = 4;</code>
   *
   * @return The admissionPolicy.
   */
  java.lang.String getAdmissionPolicy();

  /**
   *
   *
   * <pre>
   * L4 Cache entry Admission Policy in kebab-case (e.g.,
   * "admit-on-first-miss"). If `admission_policy` is pending
   * update, this field equals to the new value specified in the Update request.
   * </pre>
   *
   * <code>optional string admission_policy = 4;</code>
   *
   * @return The bytes for admissionPolicy.
   */
  com.google.protobuf.ByteString getAdmissionPolicyBytes();
}
